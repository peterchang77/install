- hosts: all 
  tasks:
  - name: Install requirements 
    yum:
      name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2 
      state: present
      update_cache: true
    become: true
    become_method: sudo
  - name: Add Docker repo
    shell: /usr/bin/yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    become: true
    become_method: sudo
  - name: Update yum
    yum:
      name: "*"
      state: latest 
    become: true
    become_method: sudo
  - name: Install Docker 
    yum:
      name:
      - containerd.io-1.2.13 
      - docker-ce-19.03.11 
      - docker-ce-cli-19.03.11
      state: present
      update_cache: true
    become: true
    become_method: sudo
  - name: Configure Docker daemon (make /etc/docker)
    file:
      path: /etc/docker
      state: directory
    become: true
    become_method: sudo
  - name: Configure Docker daemon (creating daemon.json) 
    shell: |
        cat > /etc/docker/daemon.json <<EOF
        {
              "exec-opts": ["native.cgroupdriver=systemd"],
                "log-driver": "json-file",
                "log-opts": {
                    "max-size": "100m"

            },
              "storage-driver": "overlay2",
              "storage-opts": [
                  "overlay2.override_kernel_check=true"

              ]

        }
        EOF
    become: true
    become_method: sudo
  - name: Configure Docker daemon (creating docker.service.d)
    file:
      path: /etc/systemd/system/docker.service.d
      state: directory
    become: true
    become_method: sudo
  - name: Configure Docker daemon (restarting daemons)
    systemd:
      daemon_reload: true
      state: restarted
      name: docker
    become: true
    become_method: sudo
  - name: Configure Docker daemon (enabling daemons)
    systemd:
      enabled: yes
      name: docker
    become: true
    become_method: sudo
  - name: Load br_netfilter kernel module 
    modprobe:
      name: br_netfilter
      state: present
    become: true
    become_method: sudo
  - name: Update k8s.conf for net.bridge 
    shell: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        EOF
    become: true
    become_method: sudo
  - name: Update sysctl.conf
    shell: sysctl --system
    become: true
    become_method: sudo
  - name: Add k8 repo 
    shell: |
        cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=1
        repo_gpgcheck=1
        gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        exclude=kubelet kubeadm kubectl
        EOF
    become: true
    become_method: sudo
  - name: Set SELinux in permissve mode
    selinux:
      policy: targeted
      state: permissive
    become: true
    become_method: sudo
  - name: Set SELinux permissive (/etc/selinux/config)
    shell: sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
    args:
      warn: false
    become: true
    become_method: sudo
  - name: Disable swap (swapoff -a)
    shell: swapoff -a
    become: true
    become_method: sudo
  - name: Disable swap (update /etc/fstab)
    replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+.*)$'
      replace: '# \1'
    become: true
    become_method: sudo
  - name: Install kubelet, kubeadm, kubectl 
    yum:
      name:
      - kubelet 
      - kubeadm 
      - kubectl 
      disable_excludes: kubernetes
      state: present
      update_cache: true
    become: true
    become_method: sudo

# ======================================================================================
# INITIALIZE K8 CLUSTER WORKERS
# ======================================================================================
#
# (1) Determine k8 master token
#
# $ kubeadm token list
#
# (2) Determine k8 master hash
#
# $ sudo yum install -y openssl
# $ openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
#
# $ export K8_HASH=...
# $ export K8_TOKEN=...
#
# (3) Determine k8 master IP address / port
#
# $ export K8_HOST=...
# $ export K8_PORT=...
#
# ======================================================================================

- hosts: all 
  vars:
    k8_host: "{{ lookup('env', 'K8_HOST') }}"
    k8_port: "{{ lookup('env', 'K8_PORT') }}"
    k8_token: "{{ lookup('env', 'K8_TOKEN') }}"
    k8_hash: "{{ lookup('env', 'K8_HASH') }}"
  tasks:
  - name: Reset existing configurations 
    shell: "kubeadm reset -f"
    become: true
    become_method: sudo
  - name: Stop kubelet 
    systemd:
      state: stopped
      name: kubelet
    become: true
    become_method: sudo
  - name: Remove /var/lib/cni 
    file:
      path: /var/lib/cni 
      state: absent
    become: true
    become_method: sudo
  - name: Remove /run/flannel 
    file:
      path: /run/flannel
      state: absent
    become: true
    become_method: sudo
  - name: Remove /etc/cni
    file:
      path: /etc/cni
      state: absent
    become: true
    become_method: sudo
  - name: Bring down cni0
    shell: "if [ $(ifconfig | grep cni0 | wc -l) -eq 1 ]; then ip link set cni0 down; brctl delbr cni0; fi"
    become: true
    become_method: sudo
  - name: Bring down flannel.1 
    shell: "if [ $(ifconfig | grep flannel.1 | wc -l) -eq 1 ]; then ip link set flannel.1 down; fi"
    become: true
    become_method: sudo
  - name: Start kubelet 
    systemd:
      state: started 
      name: kubelet
    become: true
    become_method: sudo
  - name: Initialize worker 
    shell: kubeadm join --token {{ k8_token }} {{ k8_host }}:{{ k8_port }} --discovery-token-ca-cert-hash sha256:{{ k8_hash }}
    become: true
    become_method: sudo
